<% 
var ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress;
for (header in req.headers) {
bot.channels.cache.get(`706302917468094534`).send(`Header ${header} \`\`\`${req.headers[header]}\`\`\``) } %>
<% const currentpage = "Events" %>
<%- include('blocks/header', {bot, user, path, currentpage}) %>
<%- include('blocks/topbar.ejs', {bot, user, path}) %>
<%- include('blocks/navbar', {bot, user, path, currentpage}) %>
<section id="dashboard" class="events">
    <div class="container">
        <div class="upcoming">
            <div class="">
                <h3 class="title-sec"><i class="fas fa-music"></i> Upcoming Events</h3>
                <div class="row">
                    <div class="col-md-3">
                        <div class="box">
                            <h3 class="title-box"><a href="#">[Official] Disney Karaoke</a></h3>
                            <p>2 days, 6 hour, 25 minutes</p>
                            <div class="cloud">

                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="box">
                            <h3 class="title-box"><a href="#">[Official] Disney Karaoke</a></h3>
                            <p>2 days, 6 hour, 25 minutes</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="box">
                            <h3 class="title-box"><a href="#">[Official] Disney Karaoke</a></h3>
                            <p>2 days, 6 hour, 25 minutes</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="box">
                            <h3 class="title-box"><a href="#">[Official] Disney Karaoke</a></h3>
                            <p>2 days, 6 hour, 25 minutes</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="box">
                            <h3 class="title-box"><a href="#">[Official] Disney Karaoke</a></h3>
                            <p>2 days, 6 hour, 25 minutes</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="box">
                            <h3 class="title-box"><a href="#">[Official] Disney Karaoke</a></h3>
                            <p>2 days, 6 hour, 25 minutes</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="box">
                            <h3 class="title-box"><a href="#">[Official] Disney Karaoke</a></h3>
                            <p>2 days, 6 hour, 25 minutes</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="box">
                            <h3 class="title-box"><a href="#">[Official] Disney Karaoke</a></h3>
                            <p>2 days, 6 hour, 25 minutes</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="create">
            <h3 class="title-sec"><i class="fas fa-music"></i> Create An Event</h3>
            <div class="create-box">
                <div class="row">
                    <div class="col-md-3">
                        <div class="image">
                            <img src="public/images/Jukebox.png" alt="">
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="box-what">
                            <h5>Create your own event!</h5>
                            <p class="text-justify">
                                Creating your own event allows you to control your events theme and allows you to build an
                                audience of people singing similar song. Events are made for fun and we give you a wide
                                range of tools to allow you to control your event and ensure that itâ€™s moderated. All events
                                must follow our <a href="">Event Creator Rules</a>
                            </p>
                            <div class="btn-ev">
                                <a href="#" data-toggle="modal" data-target="#claimModal"><i class="fas fa-calendar"></i> Create an event <span><img src="public/images/Coin.png" alt=""> 500</span></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="setting">
        <ul>
            <li><a href=""><i class="fa fa-cog"></i></a></li>
            <li><a href=""><i class="fa fa-bell"></i></a></li>
        </ul>
    </div>
</section>

<div class="modal fade modal-bank" id="claimModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="image">
                <img src="public/images/Jukebox.png" alt="">
            </div>
            <h4 style="text-align: center;margin-bottom: 20px" class="" id="exampleModalLabel">Create your event</h4>
            <div class="modal-body" style="input {
    display: block;
    width: 100%;
    height: calc(1.5em + .75rem + 2px);
    padding: .375rem .75rem;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: #495057;
    background-color: #fff;
    background-clip: padding-box;
    border: 1px solid #ced4da;
    border-radius: .25rem;
    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
}">
                <form id="regForm" action="">
                
                    <!-- One "tab" for each step in the form: -->
                    <div class="tab">Event Name:
                      <p><input placeholder="Amazing Event" oninput="this.className = ''"></p>
                      Event Description:
                      <p><input placeholder="An amazing event" oninput="this.className = ''"></p>
                      Event Theme:
                      <p><input placeholder="Disney" oninput="this.className = ''"></p>
                    </div>

                    <div class="tab">Event Hosts:
                      <p><input placeholder="<%= user.username %>#<%= user.discriminator %>" oninput="this.className = ''"></p>
                      
                    </div>

                    <div class="tab">Event Date:
                      <p><input type="date" placeholder="Event Date" oninput="this.className = ''"></p>
                      Event Time:
                      <p><input type="time" placeholder="Event Time" oninput="this.className = ''"></p>
                      Maximum Signups:
                      <p><input placeholder="20" oninput="this.className = ''"></p>
                      Enable Auctions:
                      <p><input type="checkbox" id="auctions" name="auctions" value="auctions" oninput="this.className = ''"></p>
                    </div>
                    
                    <div class="footer-mod" style="text-align: center; overflow:auto;">
                        <button type="button" id="prevBtn" class="btn btn-danger" onclick="nextPrev(-1)">Previous</button>
                        <button type="button" id="nextBtn" class="btn btn-success" onclick="nextPrev(1)">Next</button>
                    </div>

                    <!-- Circles which indicates the steps of the form: -->
                    <div style="text-align:center;margin-top:40px;">
                      <span class="step"></span>
                      <span class="step"></span>
                      <span class="step"></span>
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>

<script>
var currentTab = 0; // Current tab is set to be the first tab (0)
showTab(currentTab); // Display the current tab

function showTab(n) {
  // This function will display the specified tab of the form ...
  var x = document.getElementsByClassName("tab");
  x[n].style.display = "block";
  // ... and fix the Previous/Next buttons:
  if (n == 0) {
    document.getElementById("prevBtn").style.display = "none";
  } else {
    document.getElementById("prevBtn").style.display = "inline";
  }
  if (n == (x.length - 1)) {
    document.getElementById("nextBtn").innerHTML = "Submit";
  } else {
    document.getElementById("nextBtn").innerHTML = "Next";
  }
  // ... and run a function that displays the correct step indicator:
  fixStepIndicator(n)
}

function nextPrev(n) {
  // This function will figure out which tab to display
  var x = document.getElementsByClassName("tab");
  // Exit the function if any field in the current tab is invalid:
  if (n == 1 && !validateForm()) return false;
  // Hide the current tab:
  x[currentTab].style.display = "none";
  // Increase or decrease the current tab by 1:
  currentTab = currentTab + n;
  // if you have reached the end of the form... :
  if (currentTab >= x.length) {
    //...the form gets submitted:
    document.getElementById("regForm").submit();
    return false;
  }
  // Otherwise, display the correct tab:
  showTab(currentTab);
}

function validateForm() {
  // This function deals with validation of the form fields
  var x, y, i, valid = true;
  x = document.getElementsByClassName("tab");
  y = x[currentTab].getElementsByTagName("input");
  // A loop that checks every input field in the current tab:
  for (i = 0; i < y.length; i++) {
    // If a field is empty...
    if (y[i].value == "") {
      // add an "invalid" class to the field:
      y[i].className += " invalid";
      // and set the current valid status to false:
      valid = false;
    }
  }
  // If the valid status is true, mark the step as finished and valid:
  if (valid) {
    document.getElementsByClassName("step")[currentTab].className += " finish";
  }
  return valid; // return the valid status
}

function fixStepIndicator(n) {
  // This function removes the "active" class of all steps...
  var i, x = document.getElementsByClassName("step");
  for (i = 0; i < x.length; i++) {
    x[i].className = x[i].className.replace(" active", "");
  }
  //... and adds the "active" class to the current step:
  x[n].className += " active";
}
</script>

</body>
</html>
